<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 使用默认无参构造器 -->
	<!-- <bean id="duck" class="cn.edu.zju.cst.examples.getui_spring_test.book.spring.in.action.Juggler"> 
		</bean> -->
	<!-- 使用自定义的构造器 -->
	<!-- <bean id="duck" class="cn.edu.zju.cst.examples.getui_spring_test.book.spring.in.action.Juggler"> 
		<constructor-arg> <value>15</value> </constructor-arg> </bean> -->

	<!-- 构造器 参数中传入其他对象的引用 -->
	<bean id="sonnet29"
		class="cn.edu.zju.cst.examples.getui_spring_test.book.spring.in.action.Sonnet29">
	</bean>
	<bean id="poeticDuck"
		class="cn.edu.zju.cst.examples.getui_spring_test.book.spring.in.action.PoeticJuggler">
		<constructor-arg>
			<value>15</value>
		</constructor-arg>
		<constructor-arg ref="sonnet29">
		</constructor-arg>
	</bean>

	<!-- 在无法调用 默认构造器，也无法调用指定构造器 ，如 单例类的时候 ，可以调用一个指定的静态方法 -->
	<!-- <bean id="" class="" factory-method="getInstance"> </bean> -->

	<!-- 装配集合 -->
	<bean id="hank"
		class="cn.edu.zju.cst.examples.getui_spring_test.book.spring.in.action.OneManBand">
		<property name="instruments">
			<list>
				<ref bean="piano" />
				<ref bean="guitar" />
				<ref bean="cymbal" />
			</list>
		</property>
	</bean>

	<bean id="piano"
		class="cn.edu.zju.cst.examples.getui_spring_test.book.spring.in.action.Piano">
	</bean>
	<bean id="guitar"
		class="cn.edu.zju.cst.examples.getui_spring_test.book.spring.in.action.Guitar">
	</bean>
	<bean id="cymbal"
		class="cn.edu.zju.cst.examples.getui_spring_test.book.spring.in.action.Cymbal">
	</bean>

	<!-- AOP -->
	<bean id="audience"
		class="cn.edu.zju.cst.examples.getui_spring_test.book.spring.in.action.Audience"></bean>
<!-- 
	<aop:config>

		<aop:aspect ref="audience">
			命令切点 ，避免在每个通知中重复定义
			<aop:pointcut
				expression="execution(* cn.edu.zju.cst.examples.getui_spring_test.book.spring.in.action.Performer.perform(..))"
				id="performance" />

			<aop:before method="takSeats" pointcut-ref="performance" />
			<aop:before method="turnOffCellPhones" pointcut-ref="performance" />
			<aop:after-returning method="applaud"
				pointcut-ref="performance" />
			<aop:after-throwing method="demandRefund"
				pointcut-ref="performance" />
		</aop:aspect>

	</aop:config>
 -->
 
    <aop:config>
      <aop:aspect ref="audience">
      <aop:around method="watchPerformance" pointcut="execution(* cn.edu.zju.cst.examples.getui_spring_test.book.spring.in.action.Performer.perform(..))"/>
      </aop:aspect>
    </aop:config>

</beans>